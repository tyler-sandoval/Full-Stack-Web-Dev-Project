
@model FSDP.DATA.EF.Lesson


@{
    ViewBag.Title = "Lesson Materials for";
}
<div id="customBodyLayout">
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LessonTitle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LessonTitle)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Introduction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Introduction)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.VideoUrl)
        </dt>

        <dd>
            @Html.HiddenFor(model => model.VideoUrl)
            <div id="player"></div>

            @*@Html.DisplayFor(model => model.VideoUrl)
                <iframe width="560" height="315" src="@Model.VideoUrl" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
                   <img src=$("http://i3.ytimg.com/vi/{0}/mqdefault.jpg", @Model.VideoUrl ) />*
                </iframe>*@
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PdfFilename)
        </dt>

        <dd>
            @Html.HiddenFor(model => model.PdfFilename)
            <a class="btn btn-warning" id="prezStyle" href="@Url.Content("~/Content/img/pdfs/" + Model.PdfFilename)" target="_blank">Click to View Document</a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)

        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cours.CourseName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cours.CourseName)
        </dd>

    </dl>

    <hr />
    <p>
        @if (User.IsInRole("Admin"))
        {
            <button class="btn btn-warning" id="prezStyle">
                @Html.ActionLink("Edit", "Edit", new { id = Model.LessonID })
            </button>
            <button class="btn btn-warning" id="prezStyle">
                @Html.ActionLink("View All Lessons", "Index", "Lessons")
            </button>
        }

        <button class="btn btn-warning" id="prezStyle">
            @Html.ActionLink("Back to Course Lessons", "CourseLessons", "Lessons", new { id = Model.CourseID }, null)
        </button>
    </p>
</div>

@section pageSpecificSlider{
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img class="img-responsive" src="~/Content/img/1920x1080/fsdp.png" alt="Slider Image">
            <div class="container">
                <div class="carousel-centered">
                    <div class="margin-b-40">
                        <h1 class="carousel-title" style="text-shadow: 2px 2px 2px black, 0 0 25px purple, 0 0 10px indigo;">Complete Lesson</h1>
                        <p>@ViewBag.Title</p>
                        <p>@ViewBag.Message</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts{
    <script>
        //create youtube player
        var player;
        var h = '@ViewBag.height';
        var w = '@ViewBag.width';
        function onYouTubePlayerAPIReady() {
            player = new YT.Player('player', {
                height: 360,
                width: 640,
                modestbranding: 1,
                videoId: '@ViewBag.VideoID',
                playerVars: {
                    rel: 0,
                    autoplay: 0,
                    disablekb: 0,
                    showsearch: 0,
                    controls: 1,
                    fs: 1,
                    hd: 1,
                    html5: 1,
                    iv_load_policy: 3
                },
                events: {
                    onReady: onPlayerReady,
                    onStateChange: onPlayerStateChange
                }
            });
        }
        //autoplayVideo
        function onPlayerReady(event) {
            event.target.playVideo();
        }

        //when video reaches end
        function onPlayerStateChange(event) {
            if (event.data === 0) {
                //do something on end;
                alert('done');
            }
        }
</script>
}